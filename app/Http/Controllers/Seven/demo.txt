1、session与cookie的区别？cookie被禁用了session能否使用，为什么？
  答：
 什么是cookie?
cookie中的参数注意包括：名字，值，过期时间，路径和域。路径与域一起构成cookie的作用范围。	如果说若不设置过期时间，则表示这个cookie的生命期为浏览器会话期间，即代表关闭浏览器窗口，cookie就会随之消失。
另外在存储的时候，会话cookie一般不存储在硬盘上而是保存在内存里，虽然这种行为并不是规范规定的。若设置了过期时间，浏览器就会把cookie保存到硬盘上，关闭后再次打开浏览器，这些cookie仍然有效直到超过设定的过期时间。存储在硬盘上的cookie可以在不同的浏览器进程间共享，比如两个IE窗口。而对于保存在内存里的cookie，不同的浏览器有不同的处理方式。
另外不同的浏览器所存储的cookie大小也是不一样，例如。。。。。。
session机制。session机制是一种服务器端的机制，服务器使用一种类似于散列表的结构来保存信息。
当程序需要为某个客户端的请求创建一个session时，服务器首先检查这个客户端的请求里是否已包含了一个session标识，（称为session id），如果已包含则说明以前已经为此客户端创建过session，服务器就按照session id把这个session检索出来。使用（检索不到，会新建一个），如果客户端请求不包含session id，则为此客户端创建一个session并且生成一个与此session相关联的session id，session id的值应该是一个既不会重复，又不容易被找到规律以仿造的字符串，这个session id将被在本次响应
中返回给客户端保存。保存这个session id的方式可以采用cookie，这样在交互过程中浏览器可以自动的按照规则把这个标识发送给服务器。一般这个cookie的名字都是类似于SEEESIONID。但cookie可以被人为的禁止，则必须有其他机制以便在cookie被禁止时
仍然能够把session id传递回服务器。
最主要的区别：
1、cookie数据存放在客户的浏览器上，session数据放在服务器上。
2、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗
   考虑到安全应当使用session。
3、session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能
   考虑到减轻服务器性能方面，应当使用COOKIE。
4、单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。
5、所以个人建议：
   将登陆信息等重要信息存放为SESSION
   其他信息如果需要保留，可以放在COOKIE中
  6.当cookie被禁用，那么session也将失去作用，因为在客户登录时都会有一个session，而session是用session id来确定当前对话所对应的服务器session，而session id是通过cookie来传递的，禁用cookie的话，相当于也就使用不了session了
  2、什么是xss攻击？如何防范？
   答：xss攻击又称css，跨站脚本攻击，在web端常见的漏洞，XSS属于被动式且用于客户端的攻击方式。其原理是有人通过传入恶意的html代码攻击xss漏洞，当用户浏览该网页的时候，这段代码自动执行，从而达到攻击的目的。
      1、攻击常见方式有alert('XXX');2、html字段修改< meta http-equiv="refresh" content="0"> 或者通过重定向，加入链接，其他网站等方式
  解决方法：可以使用htmllentitis()函数方式xss跨站脚本攻击，是针对非法的html代码包括单双引号等。中文情况下，htmllentities() 却会转化所有的html代码，连同里面的它无法识别的中文字符也给转化了。他们对单引号和双引号的字符串支持不好，都不能转化，所以，他们只能防止xss攻击，不能防止SQL注入，在打印前使用htmlentities（）进行过滤，这样可以防止xss，注意中文要写htmlentities（$name.ENT_NOQUOTES,GB2312);
3.PHP数据类型有哪些？如int
答：
422阵型；
4中标量类型：
整形(int)：没有小数点的数字，可以是负数              浮点型float):就是有小数点的数字类型   
字符串(string)：单双引号内的数据既是字符串类型       布尔(boolean):turn false 在PHP数据类型中，不止Boolean可以验证数据真假，0，空的字符串，空的数组，也会被认为是false
 
 4、PHP运行模式有哪些？
  答：1、CGI模式：通用网关接口，它就像是一座桥，把html页面的请求通过执行程序发送给服务器，服务器在把返回的数据通过执行程序返回给html。CGI的优势：跨平台性极佳，几乎可以再任何操作系统上操作。缺点：每当有用户发声请求的时候，CGI就会自动生成一个CGI子进程，当访问结束，才会结束这个子进程，当大量用户进行请求时，会产生大量的CGI子进程，这时会大大的占用系统的内存资源，CPU时间等。
    2、Fast-CGI模式：长柱型接口，是CGI的升级版，Fast-CGI模式是一个可伸缩的、高速的HTTP Sever和动态脚本语言之间的通信接口。FAST-CGI模式可以将HTTP服务器和脚本解释器服务器分开，同时在脚本解释服务器上启动一个或者多个脚本守护进程。
    优点：稳定、安全、性能高  缺点：开发机器来说不太合适
    3、CLI命令行模式：不仅可以写前端页面，还可以用来写后台程序。
    4、Apache模块模式：作用是接受Apache传递过来的PHP文件请求，并处理这些请求，然后将处理后的结果返回给Apache。
    5、ISAPI模式：由于微软的排他性，只能运用与windows环境，但是它的效率要高于CGI模式，一个ISAPI的DLL，可以再被用户请求激活后常驻内存，等待用户的另一个请求，还可以在一个DLL里设置多个用户请求处理函数。

2，Include,require,include_once,require_once 的区别?

  include()与require()语句包含并运行指定文件。

  区别：

  这两种结构除了在如何处理失败之外完全一样。
  include() 产生一个警告，脚本会继续运行。
  require() 则导致一个致命错误，脚本会停止运行。
  换句话说，如果想在遇到丢失文件或遇到错误时停止处理页面就用 require()。如果想在遇到错误时继续处理页面就用 include()。
  注意在 PHP 4.3.5 之前，包含文件中的语法错误不会导致程序停止，但从此版本之后会。
  include_once()
  include_once() 语句在脚本执行期间包含并运行指定文件。此行为和 include() 语句类似，唯一区别是include_once()会先判断一下这个文件在之前是否已经被包含过，如已经包含，则忽略本次包含。
  include_once() 应该用于嵌套包含的情况下，想确保它只被包含一次以避免函数重定义，变量重新赋值等问题。

  require_once()
  require_once() 语句在脚本执行期间包含并运行指定文件。此行为和 require() 语句类似，唯一区别是require_once()会先判断一下这个文件在之前是否已经被包含过，如已经包含，则忽略本次包含。
  require_once() 应该用于嵌套包含的情况下，想确保它只被包含一次以避免函数重定义，变量重新赋值等问题。


  //析构函数在框架中如何调用，有哪些析构函数
  //__call()中...PHP中的语法
  搜索魔术方法在框架中出现位置，所代表的作用
  2、记住rest api 的八种传输方式：get put post 
  3、